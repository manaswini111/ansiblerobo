- name: install user component
  hosts: user
  become: yes
  tasks:
  - name : setup NPM source
    ansible.builtin.shell : "curl -sL https://rpm.nodesource.com/setup_lts.x | bash"
  - name : install nodejs
    ansible.builtin.yum:
      name: nodejs
      state: installed
      disable_gpg_check: yes
  - name : check roboshop user exist or not
    ansible.builtin.command: id roboshop
    register: out
    ignore_errors: true
  - when: out.rc != 0  
    name: create user roboshop 
    become: yes
    ansible.builtin.user:
      name: roboshop
  - name: check /app directory exist or not
    ansible.builtin.stat:
     path: /app
    register: directory

  - name : print the directory stats
    ansible.builtin.debug:
      msg:  "output: {{directory}}"
  - when : directory.stat.exists == false
    name: create /app directory
    ansible.builtin.file:
     path: /app
     state: directory
  - name: download user artifcat
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/user.zip
      dest: /tmp
  - name: extract user artifcat
    ansible.builtin.unarchive:
      src: /tmp/user.zip
      dest: /app
      remote_src: yes
  - name: install nodejs dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app
  - name: copy user service
    ansible.builtin.copy:
      src: user.service
      dest: /etc/systemd/system/user.service  
  - name: daemon reload
    ansible.builtin.systemd:
      daemon_reload: true
  - name: copy mongo repo to yum.repos.d
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongo.repo
  - name: install mongodb
    ansible.builtin.yum:
      name: mongodb-org-shell
      state: installed 
  - name: load user data
    ansible.builtin.command: mongo --host 172.31.20.103 < /app/schema/user.js
  - name: restart user
    ansible.builtin.service:
     name: user
     state: restarted 
     enabled: yes